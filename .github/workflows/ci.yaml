name: NodeJS CI

on:
  push:
    branches:
     - '**'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'

    - name: Install code dependencies
      run: npm install

    - name: Run code tests
      run: npm test

    - name: Bump version and push tag
      id: bump_tag
      uses: anothrNick/github-tag-action@1.26.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        INITIAL_VERSION: 0.0.0

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Get github repo name to use for docker repo
      id: repo-name
      run: echo "::set-output name=github_repo::$(echo ${GITHUB_REPOSITORY} | cut -d '/' -f2)"
        
    - name: Build, tag and push to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ steps.repo-name.outputs.github_repo }}
        IMAGE_TAG: ${{ steps.bump_tag.outputs.new_tag }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . -f Dockerfile
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Release the new image using ssh
      uses: appleboy/ssh-action@master
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ steps.repo-name.outputs.github_repo }}
        IMAGE_TAG: ${{ steps.bump_tag.outputs.new_tag }}
      with:
        host: ${{ secrets.INSTANCE_HOSTS }}
        username: ubuntu
        key: ${{ secrets.PRIVATE_KEY }}
        envs: ECR_REGISTRY,ECR_REPOSITORY,IMAGE_TAG
        script: |
          sudo docker stop devops-test
          sudo docker rm devops-test
          sudo docker run -d -p 3000:3000 --name devops-test $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
